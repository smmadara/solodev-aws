---
AWSTemplateFormatVersion: '2010-09-09'

Description: >

    This template launches a Solodev Enterprise HA Cluster on AWS with external / encrypted database and filesystem.

Metadata: 
  AWS::CloudFormation::Interface: 
    ParameterGroups: 
      - 
        Label: 
          default: "Network Configuration"
        Parameters: 
          - VPCID
          - Subnets
          - FQDN
          - CertificateArn
      - 
        Label: 
          default: "Server Configuration"
        Parameters: 
          - InstanceType
          - KeyName
      - 
        Label: 
          default: "Solodev Configuration"
        Parameters: 
            - AdminUser
            - AdminPassword
            - DatabasePassword
            - DevOpsFlavor
            - RestoreBucketName
            - AMI
    ParameterLabels: 
        VPCID: 
            default: "Which VPC should this be deployed to?"
        FQDN:
            default: "Optional: FQDN"
        CertificateArn:
            default: "Optional: CertificateArn"

Mappings:
  AutoScalingGroup:
    us-east-1:
      AMI: "ami-0172540509ea64698"
    us-west-1:
      AMI: ""
    us-west-2:
      AMI: ""
    eu-west-1:
      AMI: ""
    sa-east-1:
      AMI: ""
    ap-southeast-1:
      AMI: ""
    ap-southeast-2:
      AMI: ""
    ap-northeast-1:
      AMI: ""
  Opsworks:
    us-east-1:
      AMI: "ami-0484fd164fac8ac21"
    us-west-1:
      AMI: ""
    us-west-2:
      AMI: ""
    eu-west-1:
      AMI: ""
    sa-east-1:
      AMI: ""
    ap-southeast-1:
      AMI: ""
    ap-southeast-2:
      AMI: ""
    ap-northeast-1:
      AMI: ""

Parameters:

    VPCID: 
        Type: AWS::EC2::VPC::Id
        Description: Choose which VPC the Application should be deployed to

    Subnets:
        Description: Choose at least (2) Public subnets for this application in the same VPC selected above
        Type: List<AWS::EC2::Subnet::Id>

    FQDN:
        Type: String
        Description: URL for app. FQDN must be pointed to CNAME of ALB.

    CertificateArn:
        Type: String
        Description: SSL cert for HTTPS listener that matches the FQDN above

    KeyName:
        Default: ''
        Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
        Type: 'AWS::EC2::KeyPair::KeyName'

    InstanceType:
        Description: EC2 instance type
        Type: String
        Default: m3.medium
        AllowedValues: [t2.micro, t2.small, t2.medium, t2.large, m3.medium, m3.large,
        m3.xlarge, m3.2xlarge, m4.large, m4.xlarge, m4.2xlarge, m4.4xlarge, m4.10xlarge,
        c4.large, c4.xlarge, c4.2xlarge, c4.4xlarge, c4.8xlarge, c3.large, c3.xlarge,
        c3.2xlarge, c3.4xlarge, c3.8xlarge, r3.large, r3.xlarge, r3.2xlarge, r3.4xlarge,
        r3.8xlarge, i2.xlarge, i2.2xlarge, i2.4xlarge, i2.8xlarge]
        ConstraintDescription: Please choose a valid instance type.

    AMI:
        Description: Build AMI - Please leave this blank unless told otherwise
        Default: ''
        Type: String

    AdminUser:
        Description: CMS Admin User
        Type: String
        Default: 'admin'

    AdminPassword:
        NoEcho: true
        Description: The solodev admin account password
        Type: String
        MinLength: 1
        MaxLength: 41

    DatabasePassword:
        NoEcho: true
        Description: The database root account password
        Type: String
        MinLength: 1
        MaxLength: 41

    DevOpsFlavor:
        Description: Which DevOps tools would you like to use to manage auto scaling
        Type: String
        Default: Opsworks
        AllowedValues: [Opsworks, AutoScalingGroup]

    RestoreBucketName:
        Default: ''
        Description: Name of bucket containing files for restore
        Type: String

Conditions:
    UseDefaultAMI: !Equals [ !Ref AMI, "" ]
    UseOpsworks: !Equals [ !Ref DevOpsFlavor, "Opsworks" ]

Resources:

    LB:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !If [UseOpsworks, "https://s3.amazonaws.com/solodev-aws-ha/aws/infrastructure/elb.yaml", "https://s3.amazonaws.com/solodev-aws-ha/aws/infrastructure/alb.yaml"]
            Parameters:
                EnvironmentName: !Ref AWS::StackName
                VPC: !Ref VPCID
                Subnets: !Join [",", [!Select [0, !Ref Subnets], !Select [1, !Ref Subnets]]]

    EFS:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: https://s3.amazonaws.com/solodev-aws-ha/aws/infrastructure/efs.yaml
            Parameters:
                EnvironmentName: !Ref AWS::StackName
                VPC: !Ref VPCID
                Subnets: !Join [",", [!Select [0, !Ref Subnets], !Select [1, !Ref Subnets]]]

    RDS:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: https://s3.amazonaws.com/solodev-aws-ha/aws/infrastructure/rds.yaml
            Parameters:
                EnvironmentName: !Ref AWS::StackName
                VPC: !Ref VPCID
                LoadBalancerSecurityGroup: !GetAtt LB.Outputs.LoadBalancerSecurityGroup
                Subnets: !Join [",", [!Select [0, !Ref Subnets], !Select [1, !Ref Subnets]]]
                DatabasePassword: !Ref DatabasePassword

    EC2:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: !If [UseOpsworks, "https://s3.amazonaws.com/solodev-aws-ha/aws/services/solodev-opsworks.yaml", "https://s3.amazonaws.com/solodev-aws-ha/aws/services/solodev.yaml"]
            Parameters:
                EnvironmentName: !Ref AWS::StackName
                InstanceType: !Ref InstanceType
                ClusterSize: 3
                VPC: !Ref VPCID
                AMI: !If [UseDefaultAMI, !FindInMap [!Ref DevOpsFlavor, !Ref "AWS::Region", AMI], !Ref AMI]
                EFS: !GetAtt EFS.Outputs.EFS
                KeyName: !Ref KeyName
                FQDN: !Ref FQDN
                CertificateArn: !Ref CertificateArn
                Subnets: !Join [",", [!Select [0, !Ref Subnets], !Select [1, !Ref Subnets]]]
                LoadBalancer: !GetAtt LB.Outputs.LoadBalancer
                LoadBalancerSecurityGroup: !GetAtt LB.Outputs.LoadBalancerSecurityGroup
                AdminUser: !Ref AdminUser
                AdminPassword: !Ref AdminPassword
                DatabaseName: !GetAtt RDS.Outputs.DatabaseName
                DatabaseHost: !GetAtt RDS.Outputs.DatabaseHost
                DatabaseUsername: !GetAtt RDS.Outputs.DatabaseUsername
                DatabasePassword: !GetAtt RDS.Outputs.DatabasePassword
                DeploymentType: "SolodevProduction"
                RestoreBucketName: ""

Outputs:

    AdminUrl: 
        Description: The URL endpoint for load balancer. You should create a CNAME or alias to this name.
        Value: !Join ["", [ "https://", !GetAtt LB.Outputs.LoadBalancerUrl, "/" ]]