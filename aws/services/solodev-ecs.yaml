Description: >
    ECS Task definition for Solodev CMS

Parameters: 

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String

    VPC:
        Description: The VPC that the ECS cluster is deployed to
        Type: AWS::EC2::VPC::Id

    LoadBalancer:
        Description: The VPC that the ECS cluster is deployed to
        Type: String
        
    Cluster:
        Description: Please provide the ECS Cluster ID that this service should run on
        Type: String

    DesiredCount: 
        Description: How many instances of this task should we run across our cluster?
        Type: Number
        Default: 2

    ServiceRole:
        Description: The Application Load Balancer Service Role
        Type: String

    Path: 
        Description: The path to register with the Application Load Balancer
        Type: String
        Default: /

    DatabaseHost:
      Type: String
      Description: The database host

    DatabaseName:
      Type: String
      Description: The database name

    DatabaseUsername:
      Type: String
      Description: The database user name

    DatabasePassword:
      Type: String
      Description: The database user password
        
    DatabasePort:
        Default: '3306'
        Description: Database Port
        Type: Number

Resources:

    Service: 
        Type: AWS::ECS::Service
        DependsOn: ListenerRule
        Properties: 
            Cluster: !Ref Cluster
            Role: !Ref ServiceRole
            DesiredCount: !Ref DesiredCount
            TaskDefinition: !Ref TaskDefinition
            LoadBalancers: 
                - ContainerName: "rancher-hub"
                  ContainerPort: 8080
                  TargetGroupArn: !Ref TargetGroup

    TaskDefinition:
        Type: AWS::ECS::TaskDefinition
        Properties:
            Family: rancher-hub
            ContainerDefinitions:
                - Name: rancher-hub
                  Essential: true
                  Image: rancher/server:latest
                  Memory: 750
                  EntryPoint:
                    - /usr/bin/entry
                    - '--advertise-address'
                    - awslocal
                  Environment:
                    - Name: CATTLE_DB_CATTLE_MYSQL_HOST
                      Value: !Ref RDSEndpointAddress
                    - Name: CATTLE_DB_CATTLE_MYSQL_PORT
                      Value: !Ref DBPort
                    - Name: CATTLE_DB_CATTLE_MYSQL_NAME
                      Value: !Ref DBName
                    - Name: CATTLE_DB_CATTLE_USERNAME
                      Value: !Ref DBUsername
                    - Name: CATTLE_DB_CATTLE_PASSWORD
                      Value: !Ref DBPassword
                  PortMappings:
                    - HostPort: 8080
                      ContainerPort: 8080
                    - HostPort: 9345
                      ContainerPort: 9345
                  LogConfiguration:
                    LogDriver: awslogs
                    Options:
                        awslogs-group: !Ref AWS::StackName
                        awslogs-region: !Ref AWS::Region
                        awslogs-stream-prefix: rancher

    CloudWatchLogsGroup:
        Type: AWS::Logs::LogGroup
        Properties: 
            LogGroupName: !Ref AWS::StackName
            RetentionInDays: 14  

    TargetGroup:
        Type: AWS::ElasticLoadBalancingV2::TargetGroup
        Properties:
            VpcId: !Ref VPC
            Port: 8080
            Protocol: HTTP
            Matcher: 
                HttpCode: 200-299
            HealthCheckIntervalSeconds: 60
            HealthCheckPath: /ping
            HealthCheckProtocol: HTTP
            HealthCheckTimeoutSeconds: 30
            TargetGroupAttributes:
                - Key: deregistration_delay.timeout_seconds
                  Value: '700'
                - Key: stickiness.type
                  Value: lb_cookie
                - Key: stickiness.enabled
                  Value: 'true'
                - Key: stickiness.lb_cookie.duration_seconds
                  Value: '1860'
            Name: !Join 
                - '-'
                - - !Ref 'EnvironmentName'
                  - RancherTG

    Listener:
        Type: 'AWS::ElasticLoadBalancingV2::Listener'
        Properties:
            DefaultActions:
                - Type: forward
                  TargetGroupArn: !Ref TargetGroup
            LoadBalancerArn: !Ref LoadBalancer
            Port: '80'
            Protocol: HTTP
    
    ListenerRule:
        Type: AWS::ElasticLoadBalancingV2::ListenerRule
        Properties:
            ListenerArn: !Ref Listener
            Priority: 1
            Conditions:
                - Field: path-pattern
                  Values: 
                    - !Ref Path
            Actions:
                - TargetGroupArn: !Ref TargetGroup
                  Type: forward
